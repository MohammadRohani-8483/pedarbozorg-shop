import type { Metadata } from "next";
import "./globals.css";
import StoreProvider from "public/redux/StoreProvider";
import Header from "@/components/Header";
import ScrollToTop from "@/components/ScrollToTop";
import FooterParent from "@/components/FooterParent";
import ClientProvider from "@/components/ClientProvider";
import { cookies } from "next/headers";
import StyledComponentRegistry from "@/lib/registry";

export const metadata: Metadata = {
  title: "پدربزرگ",
  description: "Generated by create next app",
  icons: {
    icon: "/Image/favicon.ico",
  },
};

const fetchRefreshToken = async (refresh: string) => {
  const config = {
    method: "POST",
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ refresh })
  }
  try {
    const data = fetch('https://api.pedarbozorg.shop/core-api/auth/refresh/', config)
    return (await data).json()
  } catch {
    (err: any) => console.log(err);
  }
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookiesStore = cookies()
  let accessToken = cookiesStore.get("access") || null
  const refreshToken = cookiesStore.get("refresh") || null
  if (!accessToken && refreshToken) {
    const data = await fetchRefreshToken(refreshToken.value)
    if (data?.access) {
      accessToken = {
        name: 'access',
        value: data.access
      }
    }
  }

  return (
    <html lang="fa" className='bg-background overflow-x-hidden'>
      <body>
        <StoreProvider>
          <ClientProvider token={{ accessToken, refreshToken }} >
            <Header />
            <ScrollToTop />
            <StyledComponentRegistry>
              {children}
            </StyledComponentRegistry>
            <FooterParent />
          </ClientProvider>
        </StoreProvider>
      </body>
    </html >
  );
}
